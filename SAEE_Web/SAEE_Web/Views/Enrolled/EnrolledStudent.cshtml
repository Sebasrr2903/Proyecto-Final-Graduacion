@model SAEE_Web.Entities.EnrolledCoursesEnt

@{
    ViewBag.Title = "EnrolledStudent";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<main class="contacts">
    <section class="contacts_form">
        <div class="container">
            <div class="contacts_form-header">

                <div class="position-relative" style="position: relative;">
                    <div class="back-button-container" style="position: absolute; top: 5%; left: 0.3%;">
                        <!-- Añade estilo de posicionamiento y margen -->
                        <button type="button" class="btn btn--return" style="color:white; font-size: 1em; padding: 0.5em 1em;" onclick="history.back()">
                            <i class="fas fa-arrow-left"></i> Volver
                        </button>
                    </div>

                    <h2 class="contacts_form-header_title" style="font-size: 2em;">Matricular estudiantes</h2>
                </div>
            </div>
            <hr />
           
        
            @if (ViewBag.BoxMessage != null)
            {
                if (ViewBag.BoxMessage == "Estudiante matriculado.")
                {
                    <div class="alert alert-info" role="alert" style="text-align:center">
                        @ViewBag.BoxMessage
                    </div>
                }
                else
                {
                    <div class="alert alert-danger" role="alert" style="text-align:center">
                        @ViewBag.BoxMessage
                    </div>
                }
            }

           

            @using (Html.BeginForm("EnrolledStudent", "Enrolled", FormMethod.Post, new { @class = "contacts_form-form", id = "registerForm" }))
            {
                <h5>Seleccione el estudiante que desea matricular.</h5>
                <br />
                <div class="form-group">
                    <label style="margin-right: 53rem;">Estudiante:</label>
                    @Html.DropDownListFor(m => m.StudentId, ViewBag.SelectListStudents as List<SelectListItem>, new { @class = "form-control form-control-lg", @type = "text", @placeholder = "Estudiante", id = "Student" })
                </div>

                //Lista seleccionable para condicionar
                <label style="margin-right: 53rem;">Curso:</label>
                <select name="Course" id="Course" class="form-control form-control-lg" onchange="filterCourses()">
                    @foreach (var item in ViewBag.SelectListCourses as List<SelectListItem>)
                    {
                        <option value="@item.Text">@item.Text</option>
                    }
                </select>

                <div class="form-group">
                    <label style="margin-right: 53rem;">Horario:</label>
                    @Html.DropDownListFor(m => m.CourseId, ViewBag.SelectListCoursesAvailable as List<SelectListItem>, new { @class = "form-control form-control-lg", @type = "text", @placeholder = "CourseAvailable", id = "CourseAvailable" })
                </div>
                <hr />
                <div class="contacts_form-form_footer">
                    <button type="button" class="btn btn--login" style="color:white;" onclick="validateForm()">MATRICULAR</button>
                </div>
            }
        </div>
    </section>
</main>


<!-- Modal -->
@Html.Partial("_Alerts")
<!-- Modal -->



<script>
    function showConfirmation() {
  
        $('#confirmationModal').modal('show');
    }

    function submitForm() {
        $('#registerForm').submit();
    }

    function filterCourses() {
        var selectedCourseName = document.getElementById("Course").value;
        var courseDropdown = document.getElementById("CourseAvailable");
        var availableCourses = @Html.Raw(Json.Encode(ViewBag.SelectListCoursesAvailable)); // Obtener la lista de cursos disponibles desde el ViewBag

        // Limpiar las opciones existentes en el segundo dropdown
        courseDropdown.innerHTML = "";

        // Filtrar y agregar las opciones correspondientes al segundo dropdown
        availableCourses.forEach(function(course) {
            var courseName = course.Text.split("||")[0].trim(); // Obtener solo el nombre del curso

            if (courseName === selectedCourseName) {
                var option = document.createElement("option");
                option.text = course.Text;
                option.value = course.Value;
                courseDropdown.add(option);
            }
        });
    }

    function validateForm() {
        var selectIsValid = true;
        $(".form-control").each(function () {
            if ($(this).val().trim() == 0) {
                selectIsValid = false;
                $(this).css("border-color", "red");
                if (!$(this).next().hasClass("error-message")) {
                    $(this).after("<p class='error-message' style='color: red; text-align: left;'>Debe realizar una elección.</p>");
                }

            } else {
                $(this).css("border-color", "");
                $(this).next(".error-message").remove();
            }
        });

        if (selectIsValid) {
            showConfirmation();
        }
    }
</script>