@model SAEE_Web.Entities.UserEnt

@{
    ViewBag.Title = "RegisterUser";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    label {
        display: inline-block;
        width: 200px;
        text-align: left;
    }

    .form-group {
        margin-right: 20px;
        margin-bottom: 20px;
    }
</style>
<main class="contacts">
    <section class="contacts_form">
        <div class="container">
            <div class="contacts_form-header">
                <h2 class="contacts_form-header_title" style="font-size: 2em;">Registro de Usuarios</h2>
            </div>

        </div>
        <hr />
        @if (ViewBag.BoxMessage != null)
        {
            <div class="alert alert-danger" role="alert" style="text-align:center">
                @ViewBag.BoxMessage
            </div>
        }
        else if (ViewBag.InactiveMessage != null)
        {
            <div class="alert alert-danger" role="alert" style="text-align: center; color: red; border-color: red;">
                @ViewBag.InactiveMessage
            </div>
        }


        @using (Html.BeginForm("RegisterUser", "User", FormMethod.Post, new { @class = "contacts_form-form", id = "registerForm" }))
        {
            <h5>Agregue la informacion del usuario.</h5>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label style=" display: inline-block; width: 200px; /* Ajusta el ancho según tus necesidades */ text-align: left;">Nombre:</label>
                        @Html.TextBoxFor(m => m.Name, new { @class = "field required", @type = "text", @placeholder = "Nombre", maxlength = "30" })

                    </div>

                    <div class="form-group">
                        <label>Apellidos:</label>
                        @Html.TextBoxFor(m => m.Lastname, new { @class = "field required", @type = "text", @placeholder = "Apellidos", maxlength = "30" })
                    </div>

                    <div class="form-group">
                        <label>Fecha de nacimiento:</label>
                        @Html.TextBoxFor(m => m.Birthdate, new { @class = "field required", @type = "date", @placeholder = "Fecha de nacimiento" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label>Email:</label>
                        @Html.TextBoxFor(m => m.Email, new { @class = "field required", @type = "text", @placeholder = "Email", id = "emailInput" })
                        @if (ViewBag.MessageMail != null)
                        {
                            <p class='error-message' style='color: red; text-align: left;'>@ViewBag.MessageMail</p>
                        }
                    </div>

                    <div class="form-group">
                        <label>Número de teléfono:</label>
                        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "field required", @type = "number", @placeholder = "Número", maxlength = "20" })
                    </div>

                    <div class="form-group">
                        <label>Tipo de usuario:</label>
                        @Html.DropDownListFor(m => m.UserType, ViewBag.ListUsersTypes as List<SelectListItem>, new { @class = "field form-control form-control-lg", @type = "text", @placeholder = "Tipo de usuario", id = "UserType", @style = "border-radius:12px; height: 54px;" })
                    </div>

                    <div class="form-group" id="divSpecialty" style="display: none;">
                        <label>Especialidad:</label>
                        @Html.DropDownListFor(m => m.Specialty, ViewBag.ListSpecialties as List<SelectListItem>, new { @class = "field form-control-lg", @type = "text", @placeholder = "Especialidad", id = "Specialty", @style = "border-radius:12px; height: 54px; width:200%;" })
                    </div>

                    <div class="form-group" id="divExperienceYears" style="display: none;">
                        <label>Años de experiencia:</label>
                        @Html.TextBoxFor(m => m.ExperienceYears, new { @type = "number", @placeholder = "Años de experiencia", id = "ExperienceYears" })
                    </div>
                </div>
            </div>
            <hr />
            <div class="contacts_form-form_footer">
                <button type="button" class="btn btn--return" style="color:white; font-size: 1em; padding: 0.5em 1em; margin-right: 10px; width:9rem;" onclick="history.back()">
                    <i class="fas fa-arrow-left"></i> Volver
                </button>
                <button type="button" class="btn btn--login" style="color: white;  width: 12rem" onclick="validateForm()">REGISTRAR</button>
            </div>

        }

    </section>

</main>


<!-- Modal -->
@Html.Partial("_Alerts")
<!-- Modal -->



@{
    string at = "@";
}

<script>
    function limpiarCampos() {
        // Aquí puedes agregar el código para limpiar los campos del formulario
        document.getElementById("registerForm").reset();
    }
    var at = "@Html.Raw(at)";

    $(document).ready(function () {
        $("#UserType").change(function () {
            if ($(this).val() == 2) {
                $("#divSpecialty").show();
                $("#divExperienceYears").show();
                $("#ExperienceYears").addClass("field required");
                $("#Specialty").addClass("form-control");
            } else {
                $("#divSpecialty").hide();
                $("#divExperienceYears").hide();
                $("#ExperienceYears").removeClass("field required");
                $("#Specialty").removeClass("form-control");
            }
        });
    });

    function validateForm() {
        var formIsValid = true;
        $(".field.required").each(function () {
            if ($(this).val().trim() === "") {
                formIsValid = false;
                $(this).css("border-color", "red");
                if (!$(this).next().hasClass("error-message")) {
                    $(this).after("<p class='error-message' style='color: red; text-align: left;'>Este campo es obligatorio.</p>");
                }
            } else {
                $(this).css("border-color", "");
                $(this).next(".error-message").remove();

                //Si hay datos entonces se valida el correo manualmente
                if ($(this).attr("id") === "emailInput") {
                    var email = document.getElementById("emailInput").value;

                    var hasAnAt = email.includes(at);
                    if (hasAnAt) {
                        var hasADot = email.split(at)[1].includes(".");
                    }

                    if (!hasAnAt || !hasADot) {
                        $(this).after("<p class='error-message' style='color: red; text-align: left;'>El valor debe corresponder a un correo electrónico.</p>");
                        formIsValid = false;
                    }
                }
            }
        });

        //Validacion para espacios seleccionables
        var selectIsValid = true;
        $(".form-control").each(function () {
            if ($(this).val().trim() == 0) {
                selectIsValid = false;
                $(this).css("border-color", "red");
                if (!$(this).next().hasClass("error-message")) {
                    $(this).after("<p class='error-message' style='color: red; text-align: left;'>Debe realizar una elección.</p>");
                }

            } else {
                $(this).css("border-color", "");
                $(this).next(".error-message").remove();
            }
        });

        if (formIsValid && selectIsValid) {
            showConfirmation();
        }
    }

    function showConfirmation() {
        $('#confirmationModal').modal('show');
    }

    function submitForm() {
        $('#registerForm').submit();
    }





    // Obtener el elemento del input y el contador
    var nameInput = document.getElementById('Name');
    var nameCounter = document.getElementById('nameCharacterCount');

    // Función para actualizar el contador
    function updateNameCounter() {
        nameCounter.textContent = nameInput.value.length;
    }

    // Agregar un event listener para el evento input
    nameInput.addEventListener('input', updateNameCounter);

    // Llamar a updateNameCounter inicialmente para mostrar el valor inicial
    updateNameCounter();

</script>
