@model SAEE_Web.Entities.CourseAssignmentsEnt

@{
    ViewBag.Title = "RegisterTasks";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<main class="contacts">
    <section class="contacts_form">
        <div class="container">
            <div class="contacts_form-header">
                

                    <h2 class="contacts_form-header_title" style="font-size: 2.5em;">Registrar Entregable</h2>
                </div>
            </div>            
  
            <hr />
            <h5>Agregue el entregable de la semana.</h5>
            @if (ViewBag.BoxMessage != null)
            {
                <div class="alert alert-danger" role="alert" style="text-align:center">
                    @ViewBag.BoxMessage
                </div>
            }

         

            @using (Html.BeginForm("RegisterAssignment", "CourseAssignment", FormMethod.Post, new { @class = "contacts_form-form", id = "registerForm" }))
            {
                <div class="form-group">
                    <label style="margin-right: 25rem;">Nombre de la Tarea:</label>
                    @Html.TextBoxFor(m => m.AssignmentName, new { @class = "field required", @type = "text", @placeholder = "Nombre de la Tarea" , MaxLength = "30" })
                </div>

                <div class="form-group">
                    <label style="margin-right: 53rem;">Indicaciones:</label>
                    @Html.TextAreaFor(m => m.AssignmentDescription, new { @class = "field required", @rows = "6", @placeholder = "Indicaciones", style = "height:15%;" , MaxLength="250", id="contador" })
                    <div style="font-size: 12px; margin-left: 27rem;"> <span id="nameCharacterCount">0</span>/250 caracteres</div>
                </div>

                <div class="form-group">
                    <label style="margin-right: 28rem;">Fecha Límite:</label>
                    @Html.TextBoxFor(m => m.AssignmentDeadline, "{0:yyyy-MM-ddTHH:mm}", new { @class = "field required", @type = "datetime-local", @placeholder = "Fecha Límite" })
                </div>

                <div class="form-group">
                    <label style="margin-right: 24rem;">Estado del Entregable:</label>
                    @Html.DropDownListFor(m => m.AssignmentActive, new SelectList(new[] {
                        new { Value = true, Text = "Habilitar" },
                        new { Value = false, Text = "Desabilitado" }
                    }, "Value", "Text"), "Seleccione", new { @class = "form-control" })
                </div>
                <hr />
                <div class="contacts_form-form_footer">
                    <button type="button" class="btn btn--return" style="color:white; font-size: 1em; padding: 0.5em 1em; margin-right: 10px; width:9rem;" onclick="history.back()">
                        <i class="fas fa-arrow-left"></i> Volver
                    </button>
                    <button type="button" class="btn btn--login" style="color: white;  width: 12rem" onclick="validateForm()">REGISTRAR</button>
                   
                </div>
            }
   
    </section>
</main>


<!-- Modal -->
@Html.Partial("_Alerts")
<!-- Modal -->



<script>
    function validateForm() {
        var formIsValid = true;
        $(".field.required").each(function () {
            if ($(this).val().trim() === "") {
                formIsValid = false;
                $(this).css("border-color", "red");
                if (!$(this).next().hasClass("error-message")) {
                    $(this).after("<p class='error-message' style='color: red; text-align: left;'>Este campo es obligatorio.</p>");
                }
            } else {
                $(this).css("border-color", "");
                $(this).next(".error-message").remove();
            }
        });

        if (formIsValid) {
            showConfirmation();
        }
    }

    function showConfirmation() {
        var userName = $('#Name').val();
        $('#userName').text('Nombre del Usuario: ' + userName);
        $('#confirmationModal').modal('show');
    }

    function submitForm() {
        $('#registerForm').submit();
    }



    // Obtener el elemento del input y el contador
    var nameInput = document.getElementById('contador');
    var nameCounter = document.getElementById('nameCharacterCount');

    // Función para actualizar el contador
    function updateNameCounter() {
        nameCounter.textContent = nameInput.value.length;
    }

    // Agregar un event listener para el evento input
    nameInput.addEventListener('input', updateNameCounter);

    // Llamar a updateNameCounter inicialmente para mostrar el valor inicial
    updateNameCounter();
</script>







